spring.application.name=icommerce-core-service
server.port=8030
# server.port=${PORT:0}

# eureka.client.serviceUrl.defaultZone = http://localhost:8010/eureka

#----- Management
management.port=8090
# management.context-path=/management
# management.security.enabled=false
# management.endpoint.jolokia.enabled=true
# management.endpoints.shutdown.enabled=true
# management.endpoints.security=false
# management.endpoints.web.exposure.include='*'

#----- JMX properties
# spring.jmx.enabled=true

#----- Basic Security 
# spring.security.user.name=admin
# spring.security.user.password=icommerce

#----- Logging
# logging.level.org.apache.http=debug
# logging.level.org.springframework.cloud=debug
# logging.level.org.springframework.web=debug
logging.level.com.bing=debug

#----- Zipkin
# spring.zipkin.enabled = true
spring.zipkin.base-url=http://localhost:9411
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1

#----- Data source
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/full-stack-ecommerce?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=ecommerceapp
spring.datasource.password=ecommerceapp

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

spring.data.rest.base-path=/api

allowed.origins=http://localhost:4200

spring.data.rest.detection-strategy=ANNOTATED

#----- Okta OAuth 2
# okta.oauth2.client-id={yourClientId}
# okta.oauth2.client-secret={yourClientSecret}
# okta.oauth2.issuer=https://{yourOktaDomain}/oauth2/default
okta.oauth2.client-id=0oakk08ab8OvWc9yQ5d6
okta.oauth2.issuer=https://dev-13537855.okta.com/oauth2/default

#----- Spring Cloud Stream 
spring.cloud.stream.function.definition = supplier;consumer
spring.cloud.stream.bindings.supplier-out-0.destination = order-created
spring.cloud.stream.bindings.consumer-in-0.destination = order-updated

#----- Kafka
# Ref https://cloud.spring.io/spring-cloud-stream-binder-kafka/spring-cloud-stream-binder-kafka.html
# spring.cloud.stream.kafka.binder.brokers=localhost
# spring.cloud.stream.kafka.binder.defaultBrokerPort=9092
# spring.cloud.stream.kafka.binder.requiredAcks=1
# spring.cloud.stream.kafka.binder.minPartitionCount=1
# spring.cloud.stream.kafka.binder.replicationFactor=1
# spring.cloud.stream.kafka.binder.autoAddPartitions=false

# ⚠️ A default binder has been requested, but there is more than one binder available for 'org.springframework.cloud.stream.messaging.DirectWithAttributesChannel' : rabbit,kafka, and no default binder has been set.

#----- RabbitMQ
# spring.rabbitmq.host=localhost
# spring.rabbitmq.port=5672
# spring.rabbitmq.username=guest
# spring.rabbitmq.password=guest

